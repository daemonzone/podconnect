#!/bin/sh
#
# Script Name: podconnect
#
# Author: Davide Villani
# Date:   January 15, 2024
#
# Description: Quick and easy command-line tool to explore Kubernetes pods and shell connect to them
#
# Usage: 
#   ./podconnect [options] arguments
#
# Options:
#   -h, --help        Display this help message
#   -v, --version     Display the script version
#
# Dependencies:
#   - kubectl
#
# Notes:
#   Additional notes or instructions for users
#
# License:
#   This script is licensed under the GNU GENERAL PUBLIC LICENSE Version 3, 29 June 2007 license.
#
# Version:
#   0.3 - 2024-02-01
#

KUBECTL=$(which kubectl)

# Namespaces list
function namespaces() {
    $KUBECTL get namespaces
}

# Pods of the current_namespace
function pods() {
	echo "Namespace: $1"	
    pods=$($KUBECTL get pods --namespace "$1" | awk -F " " 'NR>1 {print $1}')
    if [ "$pods" == "" ] ; then 
    	echo ""
    	current_namespace=""
    	continue
    else
    	echo "${pods}"
    fi
}

# Connect to pod
function connect() {
	if [ -n "$2" ] ; then
    	pods_num=$($KUBECTL get pods --namespace "$1" | awk -F " " 'NR>1 {print $1}' | grep -c $2)
	fi
    if [ -n "$pods_num" ] && [ $pods_num -eq 1 ]; then 
    	current_pod=$($KUBECTL get pods --namespace "$1" | awk -F " " 'NR>1 {print $1}' | grep $2)
    	
    	case "$command" in
        "exec")
			$KUBECTL exec --stdin --tty $current_pod --namespace $1 -- /bin/bash
	    	connected=1
            ;;
        "logs")
			$KUBECTL logs -f --tail=2000 $current_pod --namespace $1
    		connected=1
            ;;
        *)
            echo "Unknown command: $command. Please provide a valid command (\`podconnect -h\` for more info)"
            exit 1
            ;;
    	esac
    else
    	echo "Sorry, I cannot match a specific pod, please retry\n"
    	current_pod=""
    fi
}

connected=""
command="exec"
current_namespace=""
current_pod=""
pods=""

# Main loop
while true; do
	# Interactive
	if [ $# -eq 0 ]; then
		
		if [ "$current_namespace" == "" ] ; then 
			namespaces
    		read -p "Choose a namespace: " current_namespace
    	elif [ "$current_pod" == "" ] ; then
			pods $current_namespace
			echo ""
    		read -p "Choose a pod to connect to: " current_pod
    	else
    		if [ "$connected" == "" ]; then
    			connect $current_namespace $current_pod    		
    		else
    			break
    		fi 
    	fi
    else
    	cmd=$1

    case "$cmd" in
        "-h" | "--help")
            echo "PodConnect - Easily connect to your cluster Pods\n"
            echo "usage: podconnect [logs|sh] [<namespace>] [<pod:pattern*>]"
            ;;
        "logs")
			command="logs"
			connect $2 $3
            ;;
        "sh")
			command="exec"
			connect $2 $3
            ;;
        *)
            echo "Unknown command: $command. Please provide a valid command (\`podconnect -h\` for more info)"
            exit 1
            ;;
    esac

    exit 0
	fi
done

exit 0